import Head from "next/head";
import { useState } from "react";
import Product from "@/components/Product";
import { initMongoose } from "@/lib/mongoose";
import { findAllProducts } from '../pages/api/products'
import Layout from "@/components/Layout";
import Link from 'next/link';

interface Product {
  id: string;
  name: string;
  description: string;
  price: number;
  category: string;
  picture: string;
}

interface CategoryProps {
  products: Product[];
}

export default function Category({ products }: CategoryProps) {
  const [phrase, setPhrase] = useState<string>('');
  const [category, setCategory] = useState<string>('all');

  const categoriesNames = ['all', 'mobiles', 'audio', 'laptops'];

  let filteredProducts = products;

  if (phrase) {
    filteredProducts = products.filter(p => p.name.toLowerCase().includes(phrase.toLowerCase()));
  }

  if (category !== 'all') {
    filteredProducts = filteredProducts.filter(p => p.category === category);
  }

  return (
    <>
      <Head>
        <title>Ecommerce App</title>
        <meta name="description" content="Generated by create next app"/>
        <link rel="icon" type="image/jpg" href=""/>
      </Head>
      <Layout>
        <div className="w-full mx-auto">
          <div className="bg-white">
            <div className="w-full mx-auto py-6 lg:px-8">
              <h1 className="text-3xl font-bold text-indigo-300 text-center">Search by category</h1>
            </div>
            <div className="items-center justify-center mx-auto flex">
            <div className="flex">
            {categoriesNames.map(categoryName => (
                <button
                    key={categoryName}
                    className={`text-lg mr-4 text-gray-400 hover:text-indigo-400 capitalize p-0.5 ${category === categoryName ? 'font-bold text-indigo-300' : ''}`}
                    onClick={() => setCategory(categoryName)}
                >
                    {categoryName}
                </button>
                ))}
          </div>
            </div>
            <div className="items-center justify-center mx-auto grid">
              {filteredProducts.length === 0 && (
                <p className="text-gray-400 text-center py-8">
                  No products found for the selected category and search phrase.
                </p>
              )}
              {categoriesNames.map(categoryName => (
        <div key={categoryName}>
          {filteredProducts.find(p => p.category === categoryName) && (
            <div>
              <h2 className="text-2xl capitalize py-4 px-3 text-indigo-300">{categoryName}</h2>
              <div className="grid grid-cols-2 gap-3 lg:flex">
                {filteredProducts.filter(p => p.category === categoryName).map(product => (
                  <div className="mx-auto" key={product.name}>
                    <Product
                      key={product.id}
                      _id={product.id}
                      name={product.name}
                      description={product.description}
                      price={product.price}
                      category={product.category}
                      picture={product.picture} />
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>
      ))}
      </div>
  </div>
</div>

      </Layout>
    </>
  );
};

export async function getServerSideProps() {
  await initMongoose();
  const products = await findAllProducts();
  return {
    props: {
      products: JSON.parse(JSON.stringify(products)),
    },
  };
};

